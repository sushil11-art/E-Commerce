{"ast":null,"code":"import axios from \"../axios/axios\";\nimport { setAlert } from \"./alert\";\nimport { ADD_CATEGORY, EDIT_CATEGORY, DELETE_CATEGORY, GET_CATEGORIES, GET_CATEGORY } from \"./types\";\nexport const AddCategory = formData => async dispatch => {\n  // console.log(token);\n  try {\n    const token = localStorage.getItem(\"token\"); // const body = formData;\n    // const res = await axios.post('/category/add-category', formData, {\n    //   headers: { \"x-auth-token\": token },\n    // });\n\n    const res = await axios.post(\"/category/add-category\", formData, {\n      headers: {\n        \"x-auth-token\": token,\n        \"Content-Type\": \"Application/json\"\n      }\n    }); // console.log(res.data);\n\n    dispatch({\n      type: ADD_CATEGORY,\n      payload: res.data\n    });\n    dispatch(setAlert(\"Category added successfully\", \"success\"));\n  } catch (err) {\n    const errors = err.response.data.errors; // console.log(err);\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n    } // console.log(err);\n\n  }\n};\nexport const adminCategories = () => async dispatch => {\n  try {\n    const token = localStorage.getItem(\"token\");\n    const res = await axios.get(\"/category/all\", {\n      headers: {\n        \"x-auth-token\": token\n      }\n    }); // console.log(res.data);\n\n    dispatch({\n      type: GET_CATEGORIES,\n      payload: res.data\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const getCategory = id => async dispatch => {\n  try {\n    const token = localStorage.getItem(\"token\");\n    const res = await axios.get(`/category/get-category/${id}`, {\n      headers: {\n        \"x-auth-token\": token\n      }\n    });\n    dispatch({\n      type: GET_CATEGORY,\n      payload\n    });\n  } catch (err) {}\n};","map":{"version":3,"sources":["/home/sushil/2021/E-Commerce/ecommerce/src/actions/adminAction.js"],"names":["axios","setAlert","ADD_CATEGORY","EDIT_CATEGORY","DELETE_CATEGORY","GET_CATEGORIES","GET_CATEGORY","AddCategory","formData","dispatch","token","localStorage","getItem","res","post","headers","type","payload","data","err","errors","response","forEach","error","msg","adminCategories","get","console","log","getCategory","id"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,gBAAlB;AACA,SAASC,QAAT,QAAyB,SAAzB;AACA,SACEC,YADF,EAEEC,aAFF,EAGEC,eAHF,EAIEC,cAJF,EAKEC,YALF,QAMO,SANP;AAQA,OAAO,MAAMC,WAAW,GAAIC,QAAD,IAAc,MAAOC,QAAP,IAAoB;AAC3D;AACA,MAAI;AACF,UAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd,CADE,CAEF;AACA;AACA;AACA;;AACA,UAAMC,GAAG,GAAG,MAAMb,KAAK,CAACc,IAAN,CAAW,wBAAX,EAAqCN,QAArC,EAA+C;AAC/DO,MAAAA,OAAO,EAAE;AACP,wBAAgBL,KADT;AAEP,wBAAgB;AAFT;AADsD,KAA/C,CAAlB,CANE,CAYF;;AACAD,IAAAA,QAAQ,CAAC;AAAEO,MAAAA,IAAI,EAAEd,YAAR;AAAsBe,MAAAA,OAAO,EAAEJ,GAAG,CAACK;AAAnC,KAAD,CAAR;AACAT,IAAAA,QAAQ,CAACR,QAAQ,CAAC,6BAAD,EAAgC,SAAhC,CAAT,CAAR;AACD,GAfD,CAeE,OAAOkB,GAAP,EAAY;AACZ,UAAMC,MAAM,GAAGD,GAAG,CAACE,QAAJ,CAAaH,IAAb,CAAkBE,MAAjC,CADY,CAEZ;;AACA,QAAIA,MAAJ,EAAY;AACVA,MAAAA,MAAM,CAACE,OAAP,CAAgBC,KAAD,IAAWd,QAAQ,CAACR,QAAQ,CAACsB,KAAK,CAACC,GAAP,EAAY,QAAZ,CAAT,CAAlC;AACD,KALW,CAMZ;;AACD;AACF,CAzBM;AA2BP,OAAO,MAAMC,eAAe,GAAG,MAAM,MAAOhB,QAAP,IAAoB;AACvD,MAAI;AACF,UAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACA,UAAMC,GAAG,GAAG,MAAMb,KAAK,CAAC0B,GAAN,CAAU,eAAV,EAA2B;AAC3CX,MAAAA,OAAO,EAAE;AAAE,wBAAgBL;AAAlB;AADkC,KAA3B,CAAlB,CAFE,CAKF;;AACAD,IAAAA,QAAQ,CAAC;AAAEO,MAAAA,IAAI,EAAEX,cAAR;AAAwBY,MAAAA,OAAO,EAAEJ,GAAG,CAACK;AAArC,KAAD,CAAR;AACD,GAPD,CAOE,OAAOC,GAAP,EAAY;AACZQ,IAAAA,OAAO,CAACC,GAAR,CAAYT,GAAZ;AACD;AACF,CAXM;AAaP,OAAO,MAAMU,WAAW,GAAEC,EAAD,IAAM,MAAOrB,QAAP,IAAkB;AAC/C,MAAG;AACA,UAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACD,UAAMC,GAAG,GAAG,MAAMb,KAAK,CAAC0B,GAAN,CAAW,0BAAyBI,EAAG,EAAvC,EAA0C;AAC1Df,MAAAA,OAAO,EAAE;AAAE,wBAAgBL;AAAlB;AADiD,KAA1C,CAAlB;AAGAD,IAAAA,QAAQ,CAAC;AAACO,MAAAA,IAAI,EAACV,YAAN;AAAmBW,MAAAA;AAAnB,KAAD,CAAR;AACD,GAND,CAOA,OAAME,GAAN,EAAU,CAET;AACF,CAXM","sourcesContent":["import axios from \"../axios/axios\";\nimport { setAlert } from \"./alert\";\nimport {\n  ADD_CATEGORY,\n  EDIT_CATEGORY,\n  DELETE_CATEGORY,\n  GET_CATEGORIES,\n  GET_CATEGORY\n} from \"./types\";\n\nexport const AddCategory = (formData) => async (dispatch) => {\n  // console.log(token);\n  try {\n    const token = localStorage.getItem(\"token\");\n    // const body = formData;\n    // const res = await axios.post('/category/add-category', formData, {\n    //   headers: { \"x-auth-token\": token },\n    // });\n    const res = await axios.post(\"/category/add-category\", formData, {\n      headers: {\n        \"x-auth-token\": token,\n        \"Content-Type\": \"Application/json\",\n      },\n    });\n    // console.log(res.data);\n    dispatch({ type: ADD_CATEGORY, payload: res.data });\n    dispatch(setAlert(\"Category added successfully\", \"success\"));\n  } catch (err) {\n    const errors = err.response.data.errors;\n    // console.log(err);\n    if (errors) {\n      errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\n    }\n    // console.log(err);\n  }\n};\n\nexport const adminCategories = () => async (dispatch) => {\n  try {\n    const token = localStorage.getItem(\"token\");\n    const res = await axios.get(\"/category/all\", {\n      headers: { \"x-auth-token\": token },\n    });\n    // console.log(res.data);\n    dispatch({ type: GET_CATEGORIES, payload: res.data });\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const getCategory=(id)=>async (dispatch)=>{\n  try{\n     const token = localStorage.getItem(\"token\");\n    const res = await axios.get(`/category/get-category/${id}`, {\n      headers: { \"x-auth-token\": token },\n    });\n    dispatch({type:GET_CATEGORY,payload})\n  }\n  catch(err){\n\n  }\n}"]},"metadata":{},"sourceType":"module"}