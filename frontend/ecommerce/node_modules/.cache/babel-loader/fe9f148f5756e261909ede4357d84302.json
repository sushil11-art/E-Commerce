{"ast":null,"code":"import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\nconst initialState = {};\nconst middleware = [thunk];\n\nconst loadState = () => {\n  try {\n    const serializedState = localStorage.getItem('state');\n\n    if (serializedState === null) {\n      return undefined;\n    }\n\n    return JSON.parse(serializedState);\n  } catch (e) {\n    return undefined;\n  }\n};\n\nconst saveState = state => {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem('state', serializedState);\n  } catch (e) {// Ignore write errors;\n  }\n};\n\nconst peristedState = loadState();\nstore.subscribe(() => {\n  saveState(store.getState());\n}); // const store = createStore(\n//   persistedState,\n//   // Others reducers...\n// );\n\nconst store = createStore(rootReducer, initialState, persistedState, composeWithDevTools(applyMiddleware(...middleware))); // store.subscribe(() => saveToLocalStorage(store.getState()));\n\nexport default store;","map":{"version":3,"sources":["/home/sushil/2021/E-Commerce/frontend/ecommerce/src/store.js"],"names":["createStore","applyMiddleware","composeWithDevTools","thunk","rootReducer","initialState","middleware","loadState","serializedState","localStorage","getItem","undefined","JSON","parse","e","saveState","state","stringify","setItem","peristedState","store","subscribe","getState","persistedState"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,WAAP,MAAwB,YAAxB;AAEA,MAAMC,YAAY,GAAG,EAArB;AAEA,MAAMC,UAAU,GAAG,CAACH,KAAD,CAAnB;;AAEA,MAAMI,SAAS,GAAG,MAAM;AACtB,MAAI;AACF,UAAMC,eAAe,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAxB;;AACA,QAAGF,eAAe,KAAK,IAAvB,EAA6B;AAC3B,aAAOG,SAAP;AACD;;AACD,WAAOC,IAAI,CAACC,KAAL,CAAWL,eAAX,CAAP;AACD,GAND,CAME,OAAOM,CAAP,EAAU;AACV,WAAOH,SAAP;AACD;AACF,CAVD;;AAYA,MAAMI,SAAS,GAAIC,KAAD,IAAW;AAC3B,MAAI;AACF,UAAMR,eAAe,GAAGI,IAAI,CAACK,SAAL,CAAeD,KAAf,CAAxB;AACAP,IAAAA,YAAY,CAACS,OAAb,CAAqB,OAArB,EAA8BV,eAA9B;AACD,GAHD,CAGE,OAAOM,CAAP,EAAU,CACV;AACD;AACF,CAPD;;AASA,MAAMK,aAAa,GAAGZ,SAAS,EAA/B;AAEAa,KAAK,CAACC,SAAN,CAAgB,MAAM;AACpBN,EAAAA,SAAS,CAACK,KAAK,CAACE,QAAN,EAAD,CAAT;AACD,CAFD,E,CAIA;AACA;AACA;AACA;;AAIA,MAAMF,KAAK,GAAGpB,WAAW,CACvBI,WADuB,EAEvBC,YAFuB,EAGvBkB,cAHuB,EAIrBrB,mBAAmB,CAACD,eAAe,CAAC,GAAGK,UAAJ,CAAhB,CAJE,CAAzB,C,CAQA;;AAIA,eAAec,KAAf","sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst loadState = () => {\n  try {\n    const serializedState = localStorage.getItem('state');\n    if(serializedState === null) {\n      return undefined;\n    }\n    return JSON.parse(serializedState);\n  } catch (e) {\n    return undefined;\n  }\n};\n\nconst saveState = (state) => {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem('state', serializedState);\n  } catch (e) {\n    // Ignore write errors;\n  }\n};\n\nconst peristedState = loadState();\n\nstore.subscribe(() => {\n  saveState(store.getState());\n});\n\n// const store = createStore(\n//   persistedState,\n//   // Others reducers...\n// );\n\n\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  persistedState,\n    composeWithDevTools(applyMiddleware(...middleware))\n\n);\n\n// store.subscribe(() => saveToLocalStorage(store.getState()));\n\n\n\nexport default store;\n\n"]},"metadata":{},"sourceType":"module"}