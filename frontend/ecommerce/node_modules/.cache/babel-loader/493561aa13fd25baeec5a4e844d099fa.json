{"ast":null,"code":"import { LOGIN_FAIL, LOGIN_SUCCESS, REGISTER_FAIL, REGISTER_SUCCESS, LOGOUT } from \"./types\";\nimport axios from \"axios\";\nimport { setAlert } from \"./alert\"; // import {history} from \"history\";\n\nexport const registerCustomer = ({\n  name,\n  email,\n  password\n}, history) => async dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"Application/json\"\n    }\n  };\n  const body = JSON.stringify({\n    name,\n    email,\n    password\n  });\n\n  try {\n    const res = await axios.post(\"http://localhost:4000/api/users/registerCustomer\", body, config);\n    console.log(res.data);\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    });\n    dispatch(setAlert(\"Customer register successfull\", \"success\"));\n    history.push(\"/login\");\n  } catch (err) {\n    const errors = err.response.data.errors; // console.log(err);\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n    }\n\n    dispatch({\n      type: REGISTER_FAIL\n    });\n  }\n};\nexport const loginCustomer = (email, password, history) => async dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"Application/json\"\n    }\n  };\n  const body = JSON.stringify({\n    email,\n    password\n  });\n\n  try {\n    const res = await axios.post(\"http://localhost:4000/api/users/loginCustomer\", body, config);\n    console.log(res.data);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n    history.push(\"/products\"); // dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors; // console.log(err);\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n    }\n\n    dispatch({\n      type: LOGIN_FAIL\n    });\n  }\n};\nexport const logoutCustomer = () => dispatch => {\n  //   dispatch({ type: CLEAR_PROFILE });\n  dispatch({\n    type: LOGOUT\n  });\n};","map":{"version":3,"sources":["/home/sushil/2021/E-Commerce/frontend/ecommerce/src/actions/auth.js"],"names":["LOGIN_FAIL","LOGIN_SUCCESS","REGISTER_FAIL","REGISTER_SUCCESS","LOGOUT","axios","setAlert","registerCustomer","name","email","password","history","dispatch","config","headers","body","JSON","stringify","res","post","console","log","data","type","payload","push","err","errors","response","forEach","error","msg","loginCustomer","logoutCustomer"],"mappings":"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","sourcesContent":["import { LOGIN_FAIL, LOGIN_SUCCESS, REGISTER_FAIL, REGISTER_SUCCESS ,LOGOUT} from \"./types\";\nimport axios from \"axios\";\nimport { setAlert } from \"./alert\";\n// import {history} from \"history\";\n\n\nexport const registerCustomer=({name,email,password},history)=>async(dispatch)=>{\n\n    const config={\n        headers:{\n            \"Content-Type\":\"Application/json\",\n        },\n    }\n    const body=JSON.stringify({name,email,password});\n    try{\n        const res= await axios.post(\"http://localhost:4000/api/users/registerCustomer\",body,config);\n        console.log(res.data);\n        dispatch({type:REGISTER_SUCCESS,payload:res.data});\n        dispatch(setAlert(\"Customer register successfull\",\"success\"));\n        history.push(\"/login\");\n    }\n    catch(err){\n        const errors = err.response.data.errors;\n    // console.log(err);\n    if (errors) {\n      errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\n    }\n    dispatch({ type: REGISTER_FAIL });\n  }\n} \n\nexport const loginCustomer = (email, password,history) => async (dispatch) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"Application/json\",\n    },\n  };\n  const body = JSON.stringify({ email, password });\n  try {\n    const res = await axios.post(\n      \"http://localhost:4000/api/users/loginCustomer\",\n      body,\n      config\n    );\n    console.log(res.data);\n    dispatch({ type: LOGIN_SUCCESS, payload: res.data });\n    history.push(\"/products\");\n    // dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n    // console.log(err);\n    if (errors) {\n      errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\n    }\n    dispatch({ type: LOGIN_FAIL });\n  }\n};\n\nexport const logoutCustomer = () => (dispatch) => {\n//   dispatch({ type: CLEAR_PROFILE });\n  dispatch({ type: LOGOUT });\n};\n\n\n\n"]},"metadata":{},"sourceType":"module"}